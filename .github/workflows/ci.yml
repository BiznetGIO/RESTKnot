name: ci

on:
  pull_request:
  push:
    branches:
    - master

jobs:
  code_quality:
    name: Code quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
          fetch-depth: 1

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.9'

    - name: Install dependencies
      # newer black version had breaking changes
      run: |
        make setup

    - name: Lint
      # currently cli is not-maintained
      run: |
        make sort_check fmt_check lint

  test:
    name: Test on ${{ matrix.os }} (${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        # container operations are only supported on Linux runners
        os: [ubuntu-latest]

    services:
      # it is hard to setup locally installed postgres,
      # such as setting the password.

      # TravisCI and build.sr.ht use empty password as default
      # but that doesn't work with Github action.
      # you need to work with `pg_hba.conf` or using `sudo -u postgres`
      # but the latter force you to install every dependency in in root PATH.
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          # set the password without messing with `pg_hba.conf`
          POSTGRES_PASSWORD: secret
          # create default db
          POSTGRES_DB: knotdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          make setup

      - name: Check DB version
        # pass `-h localhost` to use TCP connection. Otherwise, it will talk to locally installed postgres
        run: psql --host localhost --port ${{ job.services.postgres.ports[5432] }} --username postgres --version
        env:
          # to avoid having password prompt
          PGPASSWORD: secret

      - name: Create DB schema
        run: |
          psql --host localhost --port ${{ job.services.postgres.ports[5432] }} --username postgres knotdb < api/tests/integration/test_schema.sql
        env:
          PGPASSWORD: secret

      - name: Prepare for Integration tests
        run: |
          # use default location, instead setting the `RESTKNOT_CONFIG_FILE`
          cp  api/config.example.yml api/config.yml

          cp  api/.env.example api/.env

      - name: Run unit and integration test
        run: |
          make test

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        projects:
          - {image: "restknot-api", directory: "api" }
          - {image: "restknot-agent", directory: "agent" }

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Prepare env
        # the common usage of short SHA is 7 characters
        run: |
          echo "VCS_REVISION=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Show env
        run: |
          echo "VCS_REVISION is: ${{ env.VCS_REVISION }}"

      - name: Prepare necessary files
        run: |
          # use default location, instead setting the `RESTKNOT_CONFIG_FILE`
          cp  api/config.example.yml api/config.yml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: biznetgio/${{ matrix.projects.image }}
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.projects.directory }}
          file: ./${{ matrix.projects.directory }}/Dockerfile
          build-args: |
            VCS_REVISION=${{ env.VCS_REVISION }}
          push: false



