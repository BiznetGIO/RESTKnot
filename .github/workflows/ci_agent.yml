name: CI (Agent)

env:
  VENV_PATH: "~/.venv-agent"
  POETRY_VERSION: "1.2.2"

on:
  push:
    paths:
      -  agent/**
      - .github/workflows/ci_agent.yml
  pull_request:
    paths:
      -  agent/**
      - .github/workflows/ci_agent.yml


defaults:
  run:
    working-directory: agent

jobs:

  code_quality:
    name: Code Quality
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
          python-version: '3.10'

    - name: Cache poetry install
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-1.2.2

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ${{ env.VENV_PATH }}

    - name: Cache deps
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: ${{ env.VENV_PATH }}
        key: venv-agent-${{ hashFiles('**/poetry.lock') }}

    - name: Install confluent-kafka prerequisites
      run: |
        sudo apt-get install --yes librdkafka-dev python3-dev

    - name: Install dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        poetry install --no-interaction --no-root

    - name: Install latest just release
      uses: extractions/setup-just@v1

    - name: Install latest dprint release
      uses: taiki-e/install-action@v1
      with:
        tool: dprint

    - name: Lint
      # currently cli is not-maintained
      run: |
        just fmt-check
        just lint
